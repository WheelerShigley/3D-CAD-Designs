_fn_constant = 4*3.14;

module torus(inner_diameter, outer_diameter, center = true) {
    distance = (outer_diameter+inner_diameter)/2;
    diameter = (outer_diameter-inner_diameter);
    $fn = _fn_constant*(diameter/2);
    rotate_extrude() {
        translate([distance,0,0]) {
            circle(d = diameter);
        }
    }
}

module magnet(h = 3, r = 2.5, center = true) {
    $fn = 4*3.14*r;
    cylinder(h = h, r = r, center = center);
}

module roundedEdgePair(distance, width, radius, center = true) {
    _diameter = 2*radius;
    intersection() {
        translate([0,0,radius/2]) {
            cube([distance+_diameter,width,radius], center = center);
        }
        union() {
            for(side = [-1,1]) {
                translate( [side*( distance/2 + radius ),0,0] ) {
                    rotate([90,0,0]) {
                        
                        $fn = _fn_constant*radius;
                        cylinder(h = width, r = radius, center = center);
                    }
                }
            }
        }
    }
}

module roundedEdgeFace(dimensions, center = true) {
    _dimensions = [
        dimensions.x + 2*dimensions.z,
        dimensions.y + 2*dimensions.z,
        dimensions.z
    ];
    translate([0,0, center ? 0 : dimensions.z/2]) {
        intersection() {
            cube(_dimensions, center = true);
            //edges
            union() {
                for(side_x = [-1,1]) {
                    translate([side_x*_dimensions.x/2,0,-dimensions.z/2]) {
                        rotate([90,0,0]) {
                            $fn = _fn_constant*dimensions.z;
                            cylinder(
                                h = _dimensions.y,
                                r = dimensions.z,
                                center = true
                            );
                        }
                    }
                }
                for(side_y = [-1,1]) {
                    translate([0,side_y*_dimensions.y/2,-dimensions.z/2]) {
                        rotate([90,0,90]) {
                            $fn = _fn_constant*dimensions.z;
                            cylinder(
                                h = _dimensions.x,
                                r = dimensions.z,
                                center = true
                            );
                        }
                    }
                }
            }
        }
    }
}